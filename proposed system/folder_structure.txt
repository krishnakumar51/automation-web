
multi-agent-automation/
├── 📁 agents/
│   ├── 📄 __init__.py
│   ├── 📁 mother_agent/
│   │   ├── 📄 __init__.py
│   │   ├── 📄 supervisor.py          # Main supervisor logic
│   │   ├── 📄 state_manager.py       # State management
│   │   ├── 📄 workflow_builder.py    # LangGraph workflow construction
│   │   ├── 📄 error_handler.py       # Error handling & recovery
│   │   └── 📄 a2a_handler.py         # A2A protocol communication
│   │
│   ├── 📁 database_agent/
│   │   ├── 📄 __init__.py
│   │   ├── 📄 db_agent.py           # Main database agent
│   │   ├── 📄 db_poller.py          # Continuous polling logic
│   │   ├── 📄 db_operations.py      # Database operations
│   │   └── 📄 curp_manager.py       # CURP ID management
│   │
│   ├── 📁 email_agent/
│   │   ├── 📄 __init__.py
│   │   ├── 📄 email_agent.py        # Main email agent
│   │   ├── 📄 outlook_handler.py    # Outlook operations
│   │   ├── 📄 gmail_handler.py      # Gmail operations  
│   │   ├── 📄 email_parser.py       # Email content parsing
│   │   ├── 📄 pdf_processor.py      # PDF download & processing
│   │   └── 📄 attachment_handler.py # Email attachments
│   │
│   └── 📁 imss_agent/
│       ├── 📄 __init__.py
│       ├── 📄 imss_agent.py         # Main IMSS agent
│       ├── 📄 app_navigator.py      # IMSS app navigation
│       ├── 📄 form_handler.py       # Form filling logic
│       ├── 📄 captcha_handler.py    # CAPTCHA solving
│       └── 📄 response_validator.py # Response validation
│
├── 📁 mcp_servers/
│   ├── 📄 __init__.py
│   ├── 📁 ui_automation_server/
│   │   ├── 📄 __init__.py
│   │   ├── 📄 ui_server.py          # Main MCP UI server
│   │   ├── 📄 appium_wrapper.py     # Appium driver wrapper
│   │   ├── 📁 tools/
│   │   │   ├── 📄 element_interaction.py  # Click, tap, press tools
│   │   │   ├── 📄 text_input.py          # Text input tools
│   │   │   ├── 📄 navigation.py          # Swipe, scroll tools
│   │   │   ├── 📄 selection.py           # Dropdown, checkbox tools
│   │   │   ├── 📄 verification.py        # Element verification tools
│   │   │   ├── 📄 screen_capture.py      # Screenshot tools
│   │   │   └── 📄 special_actions.py     # CAPTCHA, long press tools
│   │   └── 📄 device_manager.py     # Device connection management
│   │
│   ├── 📁 email_server/
│   │   ├── 📄 __init__.py
│   │   ├── 📄 email_server.py       # Main MCP email server
│   │   ├── 📁 tools/
│   │   │   ├── 📄 email_operations.py    # Login, send, receive
│   │   │   ├── 📄 email_parsing.py       # Content parsing
│   │   │   ├── 📄 pdf_operations.py      # PDF handling
│   │   │   └── 📄 attachment_tools.py    # Attachment management
│   │   └── 📄 email_clients.py      # Email client configurations
│   │
│   └── 📁 database_server/
│       ├── 📄 __init__.py
│       ├── 📄 db_server.py          # Main MCP database server
│       ├── 📁 tools/
│       │   ├── 📄 query_operations.py    # Database queries
│       │   ├── 📄 data_operations.py     # CRUD operations
│       │   ├── 📄 polling_tools.py       # Polling mechanisms
│       │   └── 📄 file_storage.py        # PDF storage tools
│       └── 📄 connection_manager.py # Database connections
│
├── 📁 core/
│   ├── 📄 __init__.py
│   ├── 📄 config.py                 # Configuration management
│   ├── 📄 constants.py              # System constants
│   ├── 📄 exceptions.py             # Custom exceptions
│   ├── 📄 logger.py                 # Logging configuration
│   ├── 📄 utils.py                  # Utility functions
│   ├── 📄 state_models.py           # LangGraph state models
│   └── 📄 base_agent.py             # Base agent class
│
├── 📁 integration/
│   ├── 📄 __init__.py
│   ├── 📄 aisa_client.py            # AISA platform integration
│   ├── 📄 a2a_protocol.py           # A2A protocol implementation
│   ├── 📄 webhook_handler.py        # Webhook endpoints
│   └── 📄 api_gateway.py            # API gateway for external calls
│
├── 📁 tests/
│   ├── 📄 __init__.py
│   ├── 📁 unit/
│   │   ├── 📄 test_agents.py
│   │   ├── 📄 test_mcp_servers.py
│   │   └── 📄 test_tools.py
│   ├── 📁 integration/
│   │   ├── 📄 test_workflow.py
│   │   ├── 📄 test_agent_communication.py
│   │   └── 📄 test_aisa_integration.py
│   └── 📁 e2e/
│       ├── 📄 test_complete_workflow.py
│       └── 📄 test_error_scenarios.py
│
├── 📁 config/
│   ├── 📄 agents_config.yaml        # Agent configurations
│   ├── 📄 mcp_servers_config.yaml   # MCP server configurations
│   ├── 📄 database_config.yaml      # Database settings
│   ├── 📄 email_config.yaml         # Email settings
│   ├── 📄 appium_config.yaml        # Appium capabilities
│   └── 📄 logging_config.yaml       # Logging configuration
│
├── 📁 scripts/
│   ├── 📄 setup_environment.py      # Environment setup
│   ├── 📄 start_agents.py          # Start all agents
│   ├── 📄 start_mcp_servers.py     # Start MCP servers
│   ├── 📄 deploy.py                # Deployment script
│   └── 📄 health_check.py          # System health monitoring
│
├── 📁 data/
│   ├── 📁 logs/                    # Application logs
│   ├── 📁 screenshots/             # UI automation screenshots
│   ├── 📁 pdfs/                    # Downloaded PDFs
│   └── 📁 temp/                    # Temporary files
│
├── 📁 docs/
│   ├── 📄 README.md
│   ├── 📄 ARCHITECTURE.md
│   ├── 📄 SETUP.md
│   ├── 📄 API_REFERENCE.md
│   └── 📁 diagrams/
│       ├── 📄 main_architecture.mermaid
│       └── 📄 agent_tools_mapping.mermaid
│
├── 📄 requirements.txt             # Python dependencies
├── 📄 Dockerfile                  # Docker configuration
├── 📄 docker-compose.yml          # Multi-container setup
├── 📄 .env.example                # Environment variables template
├── 📄 .gitignore
├── 📄 main.py                     # Application entry point
└── 📄 README.md                   # Project overview
